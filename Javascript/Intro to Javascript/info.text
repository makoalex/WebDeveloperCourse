Javascript has 5 primitive data types
NUMBERS
STRINGS
BOOLEAN
NULL AND UNDEFINED
null means explicitly nothing while UNDEFINED means something is empty ir doesn't have a value yet
Javascript is dynamically typed, which means that strings can become numbers and the other way around

Besides variable declaration, we have LET and CONST

VAR:- are globally scoped
       variables declared with var outside of a functions can be used within the whole window
       it is only function bound when sed within a function
       can be updated and re-declared
       it is added to the window object

LET :- is blocked scoped
        a block is a chunk of code bound by {} so a variable declared with LET that block is only available for use within that block
        it can be updated but it can not be re-declared
        it can be updated within the scope
        it isn't added to the window object
CONST- variables declared with const maintain constant values
        block scoped and can only be accessed within the scope where it is declared
        cannot be updated or re-declared
                the value remains the same within the scope
                every CONST declaration must therefore must be initialized at the time of declaration
                different with OBJECTS declared with CONST- the object itself cannot be updated but the contents of the object CAN

we can declare VAR and LET without assigning a value, but not with CONST, because it's a constant and it's not supposed to change
meaning we need to know ahead of time what that content  will be


JAVASCRIPT BUILT IN METHODS
ALERT- displays a window with  a special alert message
PROMPT- displays a dialog box that prompts the user for input
CONSOLE.LOG- version of print in other languages
             writes a message to the console, useful for testing purposes


LOGICAL OPERATORS

there are 3  in Javascript -|| OR:- evaluates from left to right 
                                  - for each operand it evaluates to boolean: if it's true, it stops there and return the value
                                  - if all have been evaluated,means that one was false and it will return the value of false
                                  - it processes the operands until a truthy value is reached, and returns it, otherwise it will return false
                                && AND:-returns true if all operands are true, otherwise it will return false
                                        evaluates from left to right , if the result is false, it will return it
                                  and the last one 
                                !(NOT)- accepts a single value and returns the opposite 
EVERY VALUE IN JAVASCRIPT IS INHERENTLY TRUTHY OR FALSY 
                        VALUES LIKE: 0
                                     NULL
                                     NaN                  ARE ALL FALSY
                                     ""
                                     false
                                     UNDEFINED
                        ALL THE OTHERS ARE